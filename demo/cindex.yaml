preamble: |
    # pylint: disable-all
    from cbind.compatibility import decode_str
    from cbind.min_cindex_helper import (check_cursor,
                                         ref_translation_unit,
                                         Index,
                                         CursorMixin,
                                         SourceLocationMixin,
                                         TypeMixin,
                                         EnumerateKindMixin)

import:
    - name: ^clang_createIndex$
    - name: ^clang_Cursor_(getArgument|getNumArguments|isBitField)$
    - name: ^clang_CXXMethod_isStatic$
    - name: ^clang_dispose(Diagnostic|Index|String|TranslationUnit)$
    - name: ^clang_equalCursors$
    - name: ^clang_get(ArgType|
                       ArrayElementType|
                       ArraySize|
                       CanonicalType|
                       ClassType|
                       CString|
                       CursorLinkage|
                       CursorLocation|
                       CursorSemanticParent|
                       CursorSpelling|
                       CursorType|
                       Diagnostic|
                       DiagnosticLocation|
                       DiagnosticSeverity|
                       DiagnosticSpelling|
                       EnumConstantDeclUnsignedValue|
                       EnumConstantDeclValue|
                       EnumDeclIntegerType|
                       ElementType|
                       FieldDeclBitWidth|
                       FileName|
                       InstantiationLocation|
                       NullCursor|
                       NumArgTypes|
                       NumDiagnostics|
                       PointeeType|
                       ResultType|
                       TranslationUnitCursor|
                       TypeDeclaration|
                       TypedefDeclUnderlyingType)$
    - name: ^clang_hashCursor$
    - name: ^clang_is(ConstQualifiedType|
                      CursorDefinition|
                      Declaration|
                      FunctionTypeVariadic|
                      VolatileQualifiedType)$
    - name: ^clang_parseTranslationUnit$
    - name: ^clang_Type_get(AlignOf|OffsetOf)$
    - name: ^clang_visitChildren$
    - name: ^CX(ChildVisitResult|SourceLocation|String|UnsavedFile)$
    - name: ^CX(Cursor|Linkage|Type)(Kind|_\w+)?$

rename:
    - name: CXType_
      rename:
        - pattern: CXType_(\w+)
          function: 'lambda match: match.group(1).upper()'
    - name: CX(Cursor|Linkage)_
      rename:
        - pattern: '(CXX)'
          replace: \1_
        - pattern: '([a-z])([A-Z])'
          replace: \1_\2
        - pattern: CX(Cursor|Linkage)_(\w+)
          function: 'lambda match: match.group(2).upper()'
    - name: CXX
    - name: CX(\w+)
      rename: \1

errcheck:
    - restype: String
      errcheck: "lambda result, *_: decode_str(clang_getCString(result))"
    - restype: Type
      errcheck: ref_translation_unit
    # Don't attach check_cursor to clang_getNullCursor.errcheck
    - name: clang_getNullCursor
      errcheck:
    - restype: Cursor
      errcheck: check_cursor

method:
    - name: clang_disposeString
      method: String.__del__

    - name: clang_getFieldDeclBitWidth
      method: Cursor.get_bitfield_width
    - name: clang_Cursor_getNumArguments
      method: Cursor.get_num_arguments
    - name: clang_Cursor_isBitField
      method: Cursor.is_bitfield
    - name: clang_CXXMethod_isStatic
      method: Cursor.is_static_method
    - name: clang_isCursorDefinition
      method: Cursor.is_definition

    - name: clang_Type_getAlignOf
      method: Type.get_align
    - name: clang_Type_getOffsetOf
      method: Type.get_offset
    - name: clang_getArrayElementType
      method: Type.get_array_element_type
    - name: clang_getArraySize
      method: Type.get_array_size
    - name: clang_getCanonicalType
      method: Type.get_canonical
    - name: clang_getClassType
      method: Type.get_class_type
    - name: clang_getElementType
      method: Type.get_element_type
    - name: clang_getTypeDeclaration
      method: Type.get_declaration
    - name: clang_getPointeeType
      method: Type.get_pointee
    - name: clang_getResultType
      method: Type.get_result
    - name: clang_isConstQualifiedType
      method: Type.is_const_qualified
    - name: clang_isFunctionTypeVariadic
      method: Type.is_function_variadic
    - name: clang_isVolatileQualifiedType
      method: Type.is_volatile_qualified

mixin:
    - name: ^CXCursor$
      mixin: [CursorMixin]
    - name: ^CXSourceLocation$
      mixin: [SourceLocationMixin]
    - name: ^CXType$
      mixin: [TypeMixin]
    - name: ^CX(Cursor|Type|Linkage)Kind$
      mixin: [EnumerateKindMixin]

enum:
    - parent: {name: (Cursor|Type|Linkage)Kind}
      enum: '{enum_name}.register("{enum_field}", {enum_value})'
