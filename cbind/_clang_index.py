# This is generated by cbind and should not be edited.
from ctypes import *

# pylint: disable-all

import sys
if sys.platform == 'darwin':
    _lib = cdll.LoadLibrary('libclang.dylib')
elif sys.platform == 'win32' or sys.platform == 'cygwin':
    _lib = cdll.LoadLibrary('libclang.dll')
else:
    _lib = cdll.LoadLibrary('libclang.so')
del sys

from cbind.min_cindex_helper import (check_cursor, ref_translation_unit, CursorMixin, SourceLocationMixin, TypeMixin, EnumerateKindMixin)
import types as _python_types
class String(Structure):
    pass
String._fields_ = [('data', c_void_p),
                   ('private_flags', c_uint)]

clang_getCString = _lib.clang_getCString
clang_getCString.argtypes = [String]
clang_getCString.restype = c_char_p

clang_disposeString = _lib.clang_disposeString
clang_disposeString.argtypes = [String]
String.__del__ = _python_types.MethodType(clang_disposeString, None, String)

class TranslationUnitImpl(Structure):
    pass

class UnsavedFile(Structure):
    pass
UnsavedFile._fields_ = [('Filename', c_char_p),
                        ('Contents', c_char_p),
                        ('Length', c_ulong)]

clang_createIndex = _lib.clang_createIndex
clang_createIndex.argtypes = [c_int, c_int]
clang_createIndex.restype = c_void_p

clang_disposeIndex = _lib.clang_disposeIndex
clang_disposeIndex.argtypes = [c_void_p]

clang_getFileName = _lib.clang_getFileName
clang_getFileName.argtypes = [c_void_p]
clang_getFileName.restype = String
clang_getFileName.errcheck = lambda result, *_: clang_getCString(result)

class SourceLocation(SourceLocationMixin, Structure):
    pass
SourceLocation._fields_ = [('ptr_data', (c_void_p * 2)),
                           ('int_data', c_uint)]

clang_equalLocations = _lib.clang_equalLocations
clang_equalLocations.argtypes = [SourceLocation, SourceLocation]
clang_equalLocations.restype = c_uint

clang_getInstantiationLocation = _lib.clang_getInstantiationLocation
clang_getInstantiationLocation.argtypes = [SourceLocation, POINTER(c_void_p), POINTER(c_uint), POINTER(c_uint), POINTER(c_uint)]

class DiagnosticSeverity(c_uint):
    pass

clang_getNumDiagnostics = _lib.clang_getNumDiagnostics
clang_getNumDiagnostics.argtypes = [POINTER(TranslationUnitImpl)]
clang_getNumDiagnostics.restype = c_uint

clang_getDiagnostic = _lib.clang_getDiagnostic
clang_getDiagnostic.argtypes = [POINTER(TranslationUnitImpl), c_uint]
clang_getDiagnostic.restype = c_void_p

clang_disposeDiagnostic = _lib.clang_disposeDiagnostic
clang_disposeDiagnostic.argtypes = [c_void_p]

clang_getDiagnosticSeverity = _lib.clang_getDiagnosticSeverity
clang_getDiagnosticSeverity.argtypes = [c_void_p]
clang_getDiagnosticSeverity.restype = DiagnosticSeverity

clang_getDiagnosticLocation = _lib.clang_getDiagnosticLocation
clang_getDiagnosticLocation.argtypes = [c_void_p]
clang_getDiagnosticLocation.restype = SourceLocation

clang_getDiagnosticSpelling = _lib.clang_getDiagnosticSpelling
clang_getDiagnosticSpelling.argtypes = [c_void_p]
clang_getDiagnosticSpelling.restype = String
clang_getDiagnosticSpelling.errcheck = lambda result, *_: clang_getCString(result)

clang_parseTranslationUnit = _lib.clang_parseTranslationUnit
clang_parseTranslationUnit.argtypes = [c_void_p, c_char_p, POINTER(c_char_p), c_int, POINTER(UnsavedFile), c_uint, c_uint]
clang_parseTranslationUnit.restype = POINTER(TranslationUnitImpl)

clang_disposeTranslationUnit = _lib.clang_disposeTranslationUnit
clang_disposeTranslationUnit.argtypes = [POINTER(TranslationUnitImpl)]

class CursorKind(EnumerateKindMixin, c_uint):
    pass
CURSOR_UNEXPOSED_DECL = 1
CURSOR_STRUCT_DECL = 2
CURSOR_UNION_DECL = 3
CURSOR_CLASS_DECL = 4
CURSOR_ENUM_DECL = 5
CURSOR_FIELD_DECL = 6
CURSOR_ENUM_CONSTANT_DECL = 7
CURSOR_FUNCTION_DECL = 8
CURSOR_VAR_DECL = 9
CURSOR_PARM_DECL = 10
CURSOR_OBJ_CINTERFACE_DECL = 11
CURSOR_OBJ_CCATEGORY_DECL = 12
CURSOR_OBJ_CPROTOCOL_DECL = 13
CURSOR_OBJ_CPROPERTY_DECL = 14
CURSOR_OBJ_CIVAR_DECL = 15
CURSOR_OBJ_CINSTANCE_METHOD_DECL = 16
CURSOR_OBJ_CCLASS_METHOD_DECL = 17
CURSOR_OBJ_CIMPLEMENTATION_DECL = 18
CURSOR_OBJ_CCATEGORY_IMPL_DECL = 19
CURSOR_TYPEDEF_DECL = 20
CURSOR_CXXMETHOD = 21
CURSOR_NAMESPACE = 22
CURSOR_LINKAGE_SPEC = 23
CURSOR_CONSTRUCTOR = 24
CURSOR_DESTRUCTOR = 25
CURSOR_CONVERSION_FUNCTION = 26
CURSOR_TEMPLATE_TYPE_PARAMETER = 27
CURSOR_NON_TYPE_TEMPLATE_PARAMETER = 28
CURSOR_TEMPLATE_TEMPLATE_PARAMETER = 29
CURSOR_FUNCTION_TEMPLATE = 30
CURSOR_CLASS_TEMPLATE = 31
CURSOR_CLASS_TEMPLATE_PARTIAL_SPECIALIZATION = 32
CURSOR_NAMESPACE_ALIAS = 33
CURSOR_USING_DIRECTIVE = 34
CURSOR_USING_DECLARATION = 35
CURSOR_TYPE_ALIAS_DECL = 36
CURSOR_OBJ_CSYNTHESIZE_DECL = 37
CURSOR_OBJ_CDYNAMIC_DECL = 38
CURSOR_CXXACCESS_SPECIFIER = 39
CURSOR_FIRST_DECL = 1
CURSOR_LAST_DECL = 39
CURSOR_FIRST_REF = 40
CURSOR_OBJ_CSUPER_CLASS_REF = 40
CURSOR_OBJ_CPROTOCOL_REF = 41
CURSOR_OBJ_CCLASS_REF = 42
CURSOR_TYPE_REF = 43
CURSOR_CXXBASE_SPECIFIER = 44
CURSOR_TEMPLATE_REF = 45
CURSOR_NAMESPACE_REF = 46
CURSOR_MEMBER_REF = 47
CURSOR_LABEL_REF = 48
CURSOR_OVERLOADED_DECL_REF = 49
CURSOR_VARIABLE_REF = 50
CURSOR_LAST_REF = 50
CURSOR_FIRST_INVALID = 70
CURSOR_INVALID_FILE = 70
CURSOR_NO_DECL_FOUND = 71
CURSOR_NOT_IMPLEMENTED = 72
CURSOR_INVALID_CODE = 73
CURSOR_LAST_INVALID = 73
CURSOR_FIRST_EXPR = 100
CURSOR_UNEXPOSED_EXPR = 100
CURSOR_DECL_REF_EXPR = 101
CURSOR_MEMBER_REF_EXPR = 102
CURSOR_CALL_EXPR = 103
CURSOR_OBJ_CMESSAGE_EXPR = 104
CURSOR_BLOCK_EXPR = 105
CURSOR_INTEGER_LITERAL = 106
CURSOR_FLOATING_LITERAL = 107
CURSOR_IMAGINARY_LITERAL = 108
CURSOR_STRING_LITERAL = 109
CURSOR_CHARACTER_LITERAL = 110
CURSOR_PAREN_EXPR = 111
CURSOR_UNARY_OPERATOR = 112
CURSOR_ARRAY_SUBSCRIPT_EXPR = 113
CURSOR_BINARY_OPERATOR = 114
CURSOR_COMPOUND_ASSIGN_OPERATOR = 115
CURSOR_CONDITIONAL_OPERATOR = 116
CURSOR_CSTYLE_CAST_EXPR = 117
CURSOR_COMPOUND_LITERAL_EXPR = 118
CURSOR_INIT_LIST_EXPR = 119
CURSOR_ADDR_LABEL_EXPR = 120
CURSOR_STMT_EXPR = 121
CURSOR_GENERIC_SELECTION_EXPR = 122
CURSOR_GNUNULL_EXPR = 123
CURSOR_CXXSTATIC_CAST_EXPR = 124
CURSOR_CXXDYNAMIC_CAST_EXPR = 125
CURSOR_CXXREINTERPRET_CAST_EXPR = 126
CURSOR_CXXCONST_CAST_EXPR = 127
CURSOR_CXXFUNCTIONAL_CAST_EXPR = 128
CURSOR_CXXTYPEID_EXPR = 129
CURSOR_CXXBOOL_LITERAL_EXPR = 130
CURSOR_CXXNULL_PTR_LITERAL_EXPR = 131
CURSOR_CXXTHIS_EXPR = 132
CURSOR_CXXTHROW_EXPR = 133
CURSOR_CXXNEW_EXPR = 134
CURSOR_CXXDELETE_EXPR = 135
CURSOR_UNARY_EXPR = 136
CURSOR_OBJ_CSTRING_LITERAL = 137
CURSOR_OBJ_CENCODE_EXPR = 138
CURSOR_OBJ_CSELECTOR_EXPR = 139
CURSOR_OBJ_CPROTOCOL_EXPR = 140
CURSOR_OBJ_CBRIDGED_CAST_EXPR = 141
CURSOR_PACK_EXPANSION_EXPR = 142
CURSOR_SIZE_OF_PACK_EXPR = 143
CURSOR_LAMBDA_EXPR = 144
CURSOR_OBJ_CBOOL_LITERAL_EXPR = 145
CURSOR_OBJ_CSELF_EXPR = 146
CURSOR_LAST_EXPR = 146
CURSOR_FIRST_STMT = 200
CURSOR_UNEXPOSED_STMT = 200
CURSOR_LABEL_STMT = 201
CURSOR_COMPOUND_STMT = 202
CURSOR_CASE_STMT = 203
CURSOR_DEFAULT_STMT = 204
CURSOR_IF_STMT = 205
CURSOR_SWITCH_STMT = 206
CURSOR_WHILE_STMT = 207
CURSOR_DO_STMT = 208
CURSOR_FOR_STMT = 209
CURSOR_GOTO_STMT = 210
CURSOR_INDIRECT_GOTO_STMT = 211
CURSOR_CONTINUE_STMT = 212
CURSOR_BREAK_STMT = 213
CURSOR_RETURN_STMT = 214
CURSOR_GCCASM_STMT = 215
CURSOR_ASM_STMT = 215
CURSOR_OBJ_CAT_TRY_STMT = 216
CURSOR_OBJ_CAT_CATCH_STMT = 217
CURSOR_OBJ_CAT_FINALLY_STMT = 218
CURSOR_OBJ_CAT_THROW_STMT = 219
CURSOR_OBJ_CAT_SYNCHRONIZED_STMT = 220
CURSOR_OBJ_CAUTORELEASE_POOL_STMT = 221
CURSOR_OBJ_CFOR_COLLECTION_STMT = 222
CURSOR_CXXCATCH_STMT = 223
CURSOR_CXXTRY_STMT = 224
CURSOR_CXXFOR_RANGE_STMT = 225
CURSOR_SEHTRY_STMT = 226
CURSOR_SEHEXCEPT_STMT = 227
CURSOR_SEHFINALLY_STMT = 228
CURSOR_MSASM_STMT = 229
CURSOR_NULL_STMT = 230
CURSOR_DECL_STMT = 231
CURSOR_OMPPARALLEL_DIRECTIVE = 232
CURSOR_LAST_STMT = 232
CURSOR_TRANSLATION_UNIT = 300
CURSOR_FIRST_ATTR = 400
CURSOR_UNEXPOSED_ATTR = 400
CURSOR_IBACTION_ATTR = 401
CURSOR_IBOUTLET_ATTR = 402
CURSOR_IBOUTLET_COLLECTION_ATTR = 403
CURSOR_CXXFINAL_ATTR = 404
CURSOR_CXXOVERRIDE_ATTR = 405
CURSOR_ANNOTATE_ATTR = 406
CURSOR_ASM_LABEL_ATTR = 407
CURSOR_LAST_ATTR = 407
CURSOR_PREPROCESSING_DIRECTIVE = 500
CURSOR_MACRO_DEFINITION = 501
CURSOR_MACRO_EXPANSION = 502
CURSOR_MACRO_INSTANTIATION = 502
CURSOR_INCLUSION_DIRECTIVE = 503
CURSOR_FIRST_PREPROCESSING = 500
CURSOR_LAST_PREPROCESSING = 503
CURSOR_MODULE_IMPORT_DECL = 600
CURSOR_FIRST_EXTRA_DECL = 600
CURSOR_LAST_EXTRA_DECL = 600

class Cursor(CursorMixin, Structure):
    pass
Cursor._fields_ = [('kind', CursorKind),
                   ('xdata', c_int),
                   ('data', (c_void_p * 3))]

clang_getNullCursor = _lib.clang_getNullCursor
clang_getNullCursor.restype = Cursor

clang_getTranslationUnitCursor = _lib.clang_getTranslationUnitCursor
clang_getTranslationUnitCursor.argtypes = [POINTER(TranslationUnitImpl)]
clang_getTranslationUnitCursor.restype = Cursor
clang_getTranslationUnitCursor.errcheck = check_cursor

clang_equalCursors = _lib.clang_equalCursors
clang_equalCursors.argtypes = [Cursor, Cursor]
clang_equalCursors.restype = c_uint

clang_hashCursor = _lib.clang_hashCursor
clang_hashCursor.argtypes = [Cursor]
clang_hashCursor.restype = c_uint

clang_isDeclaration = _lib.clang_isDeclaration
clang_isDeclaration.argtypes = [CursorKind]
clang_isDeclaration.restype = c_uint

class LinkageKind(EnumerateKindMixin, c_uint):
    pass
LINKAGE_INVALID = 0
LINKAGE_NO_LINKAGE = 1
LINKAGE_INTERNAL = 2
LINKAGE_UNIQUE_EXTERNAL = 3
LINKAGE_EXTERNAL = 4

clang_getCursorLinkage = _lib.clang_getCursorLinkage
clang_getCursorLinkage.argtypes = [Cursor]
clang_getCursorLinkage.restype = LinkageKind

clang_getCursorSemanticParent = _lib.clang_getCursorSemanticParent
clang_getCursorSemanticParent.argtypes = [Cursor]
clang_getCursorSemanticParent.restype = Cursor
clang_getCursorSemanticParent.errcheck = check_cursor

clang_getCursorLocation = _lib.clang_getCursorLocation
clang_getCursorLocation.argtypes = [Cursor]
clang_getCursorLocation.restype = SourceLocation

class TypeKind(EnumerateKindMixin, c_uint):
    pass
TYPE_INVALID = 0
TYPE_UNEXPOSED = 1
TYPE_VOID = 2
TYPE_BOOL = 3
TYPE_CHAR_U = 4
TYPE_UCHAR = 5
TYPE_CHAR16 = 6
TYPE_CHAR32 = 7
TYPE_USHORT = 8
TYPE_UINT = 9
TYPE_ULONG = 10
TYPE_ULONGLONG = 11
TYPE_UINT128 = 12
TYPE_CHAR_S = 13
TYPE_SCHAR = 14
TYPE_WCHAR = 15
TYPE_SHORT = 16
TYPE_INT = 17
TYPE_LONG = 18
TYPE_LONGLONG = 19
TYPE_INT128 = 20
TYPE_FLOAT = 21
TYPE_DOUBLE = 22
TYPE_LONGDOUBLE = 23
TYPE_NULLPTR = 24
TYPE_OVERLOAD = 25
TYPE_DEPENDENT = 26
TYPE_OBJCID = 27
TYPE_OBJCCLASS = 28
TYPE_OBJCSEL = 29
TYPE_FIRSTBUILTIN = 2
TYPE_LASTBUILTIN = 29
TYPE_COMPLEX = 100
TYPE_POINTER = 101
TYPE_BLOCKPOINTER = 102
TYPE_LVALUEREFERENCE = 103
TYPE_RVALUEREFERENCE = 104
TYPE_RECORD = 105
TYPE_ENUM = 106
TYPE_TYPEDEF = 107
TYPE_OBJCINTERFACE = 108
TYPE_OBJCOBJECTPOINTER = 109
TYPE_FUNCTIONNOPROTO = 110
TYPE_FUNCTIONPROTO = 111
TYPE_CONSTANTARRAY = 112
TYPE_VECTOR = 113
TYPE_INCOMPLETEARRAY = 114
TYPE_VARIABLEARRAY = 115
TYPE_DEPENDENTSIZEDARRAY = 116

class Type(TypeMixin, Structure):
    pass
Type._fields_ = [('kind', TypeKind),
                 ('data', (c_void_p * 2))]

clang_getCursorType = _lib.clang_getCursorType
clang_getCursorType.argtypes = [Cursor]
clang_getCursorType.restype = Type
clang_getCursorType.errcheck = ref_translation_unit

clang_getTypedefDeclUnderlyingType = _lib.clang_getTypedefDeclUnderlyingType
clang_getTypedefDeclUnderlyingType.argtypes = [Cursor]
clang_getTypedefDeclUnderlyingType.restype = Type
clang_getTypedefDeclUnderlyingType.errcheck = ref_translation_unit

clang_getEnumDeclIntegerType = _lib.clang_getEnumDeclIntegerType
clang_getEnumDeclIntegerType.argtypes = [Cursor]
clang_getEnumDeclIntegerType.restype = Type
clang_getEnumDeclIntegerType.errcheck = ref_translation_unit

clang_getEnumConstantDeclValue = _lib.clang_getEnumConstantDeclValue
clang_getEnumConstantDeclValue.argtypes = [Cursor]
clang_getEnumConstantDeclValue.restype = c_longlong

clang_getEnumConstantDeclUnsignedValue = _lib.clang_getEnumConstantDeclUnsignedValue
clang_getEnumConstantDeclUnsignedValue.argtypes = [Cursor]
clang_getEnumConstantDeclUnsignedValue.restype = c_ulonglong

clang_getFieldDeclBitWidth = _lib.clang_getFieldDeclBitWidth
clang_getFieldDeclBitWidth.argtypes = [Cursor]
clang_getFieldDeclBitWidth.restype = c_int
Cursor.get_bitfield_width = _python_types.MethodType(clang_getFieldDeclBitWidth, None, Cursor)

clang_Cursor_getNumArguments = _lib.clang_Cursor_getNumArguments
clang_Cursor_getNumArguments.argtypes = [Cursor]
clang_Cursor_getNumArguments.restype = c_int
Cursor.get_num_arguments = _python_types.MethodType(clang_Cursor_getNumArguments, None, Cursor)

clang_Cursor_getArgument = _lib.clang_Cursor_getArgument
clang_Cursor_getArgument.argtypes = [Cursor, c_uint]
clang_Cursor_getArgument.restype = Cursor
clang_Cursor_getArgument.errcheck = check_cursor

clang_equalTypes = _lib.clang_equalTypes
clang_equalTypes.argtypes = [Type, Type]
clang_equalTypes.restype = c_uint

clang_getCanonicalType = _lib.clang_getCanonicalType
clang_getCanonicalType.argtypes = [Type]
clang_getCanonicalType.restype = Type
clang_getCanonicalType.errcheck = ref_translation_unit
Type.get_canonical = _python_types.MethodType(clang_getCanonicalType, None, Type)

clang_getPointeeType = _lib.clang_getPointeeType
clang_getPointeeType.argtypes = [Type]
clang_getPointeeType.restype = Type
clang_getPointeeType.errcheck = ref_translation_unit
Type.get_pointee = _python_types.MethodType(clang_getPointeeType, None, Type)

clang_getTypeDeclaration = _lib.clang_getTypeDeclaration
clang_getTypeDeclaration.argtypes = [Type]
clang_getTypeDeclaration.restype = Cursor
clang_getTypeDeclaration.errcheck = check_cursor
Type.get_declaration = _python_types.MethodType(clang_getTypeDeclaration, None, Type)

clang_getResultType = _lib.clang_getResultType
clang_getResultType.argtypes = [Type]
clang_getResultType.restype = Type
clang_getResultType.errcheck = ref_translation_unit
Type.get_result = _python_types.MethodType(clang_getResultType, None, Type)

clang_getNumArgTypes = _lib.clang_getNumArgTypes
clang_getNumArgTypes.argtypes = [Type]
clang_getNumArgTypes.restype = c_int

clang_getArgType = _lib.clang_getArgType
clang_getArgType.argtypes = [Type, c_uint]
clang_getArgType.restype = Type
clang_getArgType.errcheck = ref_translation_unit

clang_isFunctionTypeVariadic = _lib.clang_isFunctionTypeVariadic
clang_isFunctionTypeVariadic.argtypes = [Type]
clang_isFunctionTypeVariadic.restype = c_uint
Type.is_function_variadic = _python_types.MethodType(clang_isFunctionTypeVariadic, None, Type)

clang_getArrayElementType = _lib.clang_getArrayElementType
clang_getArrayElementType.argtypes = [Type]
clang_getArrayElementType.restype = Type
clang_getArrayElementType.errcheck = ref_translation_unit
Type.get_array_element_type = _python_types.MethodType(clang_getArrayElementType, None, Type)

clang_getArraySize = _lib.clang_getArraySize
clang_getArraySize.argtypes = [Type]
clang_getArraySize.restype = c_longlong
Type.get_array_size = _python_types.MethodType(clang_getArraySize, None, Type)

clang_Type_getAlignOf = _lib.clang_Type_getAlignOf
clang_Type_getAlignOf.argtypes = [Type]
clang_Type_getAlignOf.restype = c_longlong
Type.get_align = _python_types.MethodType(clang_Type_getAlignOf, None, Type)

clang_Cursor_isBitField = _lib.clang_Cursor_isBitField
clang_Cursor_isBitField.argtypes = [Cursor]
clang_Cursor_isBitField.restype = c_uint
Cursor.is_bitfield = _python_types.MethodType(clang_Cursor_isBitField, None, Cursor)

class ChildVisitResult(c_uint):
    pass

clang_visitChildren = _lib.clang_visitChildren
clang_visitChildren.argtypes = [Cursor, CFUNCTYPE(ChildVisitResult, Cursor, Cursor, c_void_p), c_void_p]
clang_visitChildren.restype = c_uint

clang_getCursorSpelling = _lib.clang_getCursorSpelling
clang_getCursorSpelling.argtypes = [Cursor]
clang_getCursorSpelling.restype = String
clang_getCursorSpelling.errcheck = lambda result, *_: clang_getCString(result)

clang_isCursorDefinition = _lib.clang_isCursorDefinition
clang_isCursorDefinition.argtypes = [Cursor]
clang_isCursorDefinition.restype = c_uint
Cursor.is_definition = _python_types.MethodType(clang_isCursorDefinition, None, Cursor)

